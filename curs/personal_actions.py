from aiogram import types
from dispatcher import dp
import config
import re
from bot import BotDB
import datetime
import requests
import numpy as np
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ—á–∞—Ç–∫—É –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –±–æ—Ç–æ–º. –ü—Ä–∏ –≤–µ—Ä—à—ñ–π –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –±–æ—Ç –¥–æ–¥–∞—î –∑–∞–ø–∏—Å –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É –ë–î

@dp.message_handler(commands = "start")
async def start(message: types.Message):
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
    buttons = ["/earned", "/spent", "/history", "/del"]
    keyboard.add(*buttons)

    await message.bot.send_message(message.from_user.id, "–Ø –¥–æ –≤–∞—à–∏—Ö –ø–æ—Å–ª—É–≥!", reply_markup=keyboard)

# –ö–ª–∞—Å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∑–º—ñ–Ω–Ω—É, –≤–æ–Ω–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∞, —â–æ–± –∑–∞–ø–∞–º'—è—Ç–æ–≤—É–≤–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é (+/-) –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –≤–≤–µ–¥–µ–Ω–æ—ó –∫–æ–º–∞–Ω–¥–∏
class op():
    oper=''

# –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞–Ω—ñ–≤, –≤ –¥–∞–Ω–æ–º—É –≤–∏–ø–∞–¥–∫—É –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω –ª–∏—à–µ –æ–¥–∏–Ω. –†–µ–∞–≥—É—î –Ω–∞ –∫–æ–º–∞–Ω–¥–∏ —É –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É —Ö–µ–Ω–¥–ª–µ—Ä—ñ, –ø—ñ—Å–ª—è —á–æ–≥–æ –º–∏
# –º–æ–∂–µ–º–æ –ø—Ä–∏–π–Ω—è—Ç–∏ –æ–¥–Ω–µ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ —Å—Ç–∞–Ω –≤–∏–º–∫–Ω–µ—Ç—å—Å—è
class Form(StatesGroup):
    wait4amount = State()

# –ö–æ–º–∞–Ω–¥–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É –ø—Ä–æ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤—É –æ–ø–µ—Ä–∞—Ü—ñ—é —É –ë–î

@dp.message_handler(commands = ("spent", "earned", "s", "e"), commands_prefix = "/!")
async def add_operation(message: types.Message):

    cmd_variants = (('/spent', '/s', '!spent', '!s'), ('/earned', '/e', '!earned', '!e'))
    # –¶–∏–∫–ª –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–Ω–∞–∫—É –æ–ø–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ç–æ–≥–æ —è–∫–∏–π —à–∞–±–ª–æ–Ω –∫–æ–º–∞–Ω–¥–∏ –±—É–ª–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ
    await Form.wait4amount.set()
    if message.text.startswith(cmd_variants[0]):
        op.oper='-'
    elif message.text.startswith(cmd_variants[1]):
        op.oper='+'
    else:
        return
    await message.answer("–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É")

    @dp.message_handler(state=Form.wait4amount)
    async def oper_prop(message: types.Message, state: FSMContext):

        value=message.text
        await state.finish()

    # –†–æ–±–æ—Ç–∞ API –∑ –ù–∞—Ü–±–∞–Ω–∫—É. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ —Ç–µ–∫—Å—Ç —Å—Ö–æ–∂–∏–π –Ω–∞ –∫–æ–¥ –≤–∞–ª—é—Ç–∏ –∫–æ–¥ –≤–∞–ª—é—Ç–∏, –æ—Ç—Ä–∏–º—É—î–º–æ –π–æ–≥–æ –∑–∞
    # –¥–æ–ø–æ–º–æ–≥–æ—é —Ä–µ–≥—É–ª—è—Ä–Ω–∏—Ö –≤–∏—Ä–∞–∑—ñ–≤, –∑–≤–µ—Ä—Ç–∞—î–º–æ—Å—å API –¥–æ —Ç–∞ —à—É–∫–∞—î–º–æ —É —Ü–∏–∫–ª—ñ —á–∏ —ñ—Å–Ω—É—î –≤–∞–ª—é—Ç–∞, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞—à–æ–º—É —Ç–µ–∫—Å—Ç—É,
    # —è–∫—â–æ —Ç–∞–∫ - –∑–∞–ø–∏—Å—É—î–º–æ —ó—ó –∫—É—Ä—Å —É –∑–º—ñ–Ω–Ω—É

        try:
            currency = re.search(r"\b\D{3}\b", value).group(0)
            value = value.replace(currency, '').strip()

            nbu_data = requests.get(config.NBU_LINK).json()
            for i in range(len(nbu_data)):
                if nbu_data[i]['cc'] == currency.upper():
                    currency = nbu_data[i]['rate']
                    cur_check = True
                    break
        except AttributeError:
            cur_check = False

    # –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ä–µ–≥—É–ª—è—Ä–Ω–∏—Ö –≤–∏—Ä–∞–∑—ñ–≤ —Ç–∞ –º–µ—Ç–æ–¥—É replace() –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º–æ–∂–ª–∏–≤—ñ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—ñ –≤ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ñ —Å—É–º–∏, —è–∫—ñ –Ω–µ —î –∫—Ä–∏—Ç–∏—á–Ω–∏–º–∏ —ñ –≤–∏–ø—Ä–∞–≤–ª—è—î–º–æ
    # —ó—Ö. –¢–∞–∫–æ–∂ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –±—É–ª–∞ –∑–Ω–∞–π–¥–µ–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–∞–ª—é—Ç—É

        if(len(value)):
            x = re.findall(r"\d+(?:.\d+)?", value)
            if(len(x)):
                value = float(x[0].replace(',', '.'))
                try:
                    if(cur_check):
                        value = value * currency
                        value = np.round(value, 2)
                except UnboundLocalError:
                    return

        #  –ó–∞–Ω–æ—Å–∏–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —É –ë–î

                BotDB.add_record(message.from_user.id, op.oper, value)

                if(op.oper == '-'):
                    await message.reply(f"‚úÖ –ó–∞–ø–∏—Å –ø—Ä–æ <u><b>–≤–∏—Ç—Ä–∞—Ç—É</b></u> {value} –≥—Ä–Ω. —É—Å–ø—ñ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–æ!")
                else:
                    await message.reply(f"‚úÖ –ó–∞–ø–∏—Å –ø—Ä–æ <u><b>–¥–æ—Ö—ñ–¥</b></u> {value} –≥—Ä–Ω. —É—Å–ø—ñ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–æ!")
            else:
                await message.reply("–ù–µ –≤–¥–∞–ª–æ—Å—å –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —Å—É–º—É!")
        else:
            await message.reply("–ù–µ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞!")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —ñ—Å—Ç–æ—Ä—ñ—ó –æ–ø–µ—Ä–∞—Ü—ñ–π –∑–∞ –ø–µ–≤–Ω–∏–π –ø–µ—Ä—ñ–æ–¥

@dp.message_handler(commands = ("history", "h"), commands_prefix = "/!")
async def history(message: types.Message):
    cmd_variants = ('/history', '/h', '!history', '!h')
    within_als = {
        "day": ('today', 'day', '—Å—å–æ–≥–æ–¥–Ω—ñ', '–¥–µ–Ω—å'),
        "week": ('week', '—Ç–∏–∂–¥–µ–Ω—å'),
        "month": ('month', '–º—ñ—Å—è—Ü—å'),
        "year": ('year', '—Ä—ñ–∫'),
    }
# –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —Ç–µ–∫—Å—Ç —Å–∞–º–æ—ó –∫–æ–º–∞–Ω–¥–∏

    cmd = message.text
    for r in cmd_variants:
        cmd = cmd.replace(r, '').strip()

# –ó–≤—ñ—Ä—è—î–º–æ –ø–æ–∑–±–∞–≤–ª–µ–Ω—É –∫–ª—é—á–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –∫–æ–º–∞–Ω–¥—É –∑ –º–∞—Å–∏–≤–æ–º –º–æ–∂–ª–∏–≤–∏—Ö –≤—ñ–¥—Ä—ñ–∑–∫—ñ–≤ —á–∞—Å—É

    within = 'day'
    if(len(cmd)):
        for k in within_als:
            for als in within_als[k]:
                if(als == cmd):
                    within = k

# –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å–∞–Ω–∏—Ö —É –ë–î –æ–ø–µ—Ä–∞—Ü—ñ–π –∑–∞ –ø–µ–≤–Ω–∏–π –ø–µ—Ä—ñ–æ–¥. –î–∞–ª—ñ –≤–∏–≤–æ–¥–∏–º–æ —ó—Ö —É —Ü–∏–∫–ª—ñ

    records = BotDB.get_records(message.from_user.id, within)
    checkplus=0
    checkminus=0

    if(len(records)):
        answer = f"üïò –Ü—Å—Ç–æ—Ä—ñ—è –æ–ø–µ—Ä–∞—Ü—ñ–π –∑–∞ {within_als[within][-1]} –¥–ª—è {message.from_user.first_name}\n\n"

        for r in records:
            answer += "<b>" + ("‚ûñ –í–∏—Ç—Ä–∞—Ç–∞  " if not r[2] else "‚ûï –ü—Ä–∏–±—É—Ç–æ–∫") + "</b>"
            answer += f" - {r[3]}"
            answer += f" <i>({r[4]})</i>\n"
            if r[2]:
                checkplus += r[3]
            else:
                checkminus -= r[3]

        await message.reply(answer)
        await message.answer(f"‚è´ –ó–∞–≥–∞–ª—å–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ –∑–∞ —Ü–µ–π –ø–µ—Ä—ñ–æ–¥ {np.round(checkplus, 2)} –≥—Ä–Ω.\n"
                             f"‚è¨ –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∏—Ç—Ä–∞—Ç–∞ –∑–∞ —Ü–µ–π –ø–µ—Ä—ñ–æ–¥ {np.round(abs(checkminus), 2)} –≥—Ä–Ω.\n"
                             f"üí≤ –ó–∞–≥–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –Ω–∞ –ø–µ—Ä—ñ–æ–¥ {np.round(checkplus+checkminus)}")

    else:
        await message.reply("–ó–∞–ø–∏—Å—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")


# –ö–æ–º–∞–Ω–¥–∞ –≤–∏–¥–∞–ª—è—î –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤–Ω–µ—Å–µ–Ω–∏–π –¥–∞–Ω–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –∑–∞–ø–∏—Å —É –ë–î

@dp.message_handler(commands = ("del"), commands_prefix = "/!")
async def delete(message: types.Message):

# –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –¥–∞—î –Ω–∞–º —Å–ø–∏—Å–æ–∫ id –∑–∞–ø–∏—Å—ñ–≤ –∑ –ë–î. –£ —Ü–∏–∫–ª—ñ —à—É–∫–∞—î–º–æ, —è–∫–∏–π id —î –Ω–∞–π–±—ñ–ª—å—à–∏–º, –∞ –æ—Ç–∂–µ –Ω–∞–ª–µ–∂–∏—Ç—å
# –æ—Å—Ç–∞–Ω–Ω—å–æ–º—É –≤–Ω–µ—Å–µ–Ω–æ–º—É –∑–∞–ø–∏—Å—É. –ü—ñ—Å–ª—è —Ü–∏–∫–ª—É –ø–µ—Ä–µ–¥–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ —É —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –≤–∏–¥–∞–ª–∏—Ç—å –≤–∏–±—Ä–∞–Ω–∏–π –∑–∞–ø–∏—Å —É –ë–î

    list = BotDB.give_id_list(message.from_user.id)
    id=0
    for i in list:
        for j in i:
            if j>id:
                id=j
            else:
                break

    BotDB.del_record(message.from_user.id, id)
    await message.reply("üöÆ –ó–∞–ø–∏—Å –≤–∏–¥–∞–ª–µ–Ω–æ!")

# –ö–æ–º–∞–Ω–¥–∞, —â–æ –≤—ñ–¥–Ω–æ—Å–∏—Ç—å—Å—è –¥–æ –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π –º–æ–¥–µ—Ä–∞—Ü—ñ—ó —á–∞—Ç—É —ñ –æ–±–º–µ–∂—É—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
# –ø—Ä–æ—Ç—è–≥–æ–º –≤–∫–∞–∑–∞–Ω–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω—É —É —Å–µ–∫—É–Ω–¥–∞—Ö. (–õ–∏—à–µ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤ –∑ –ø—Ä–∞–≤–æ–º –æ–±–º–µ–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)

@dp.message_handler(is_admin=True, member_can_restrict=True ,commands="ban", commands_prefix="!/")
async def ban(message: types.Message):
    cmd_variants = ('!ban', '/ban')
    if not message.reply_to_message:
        await message.answer("–¶—é –∫–æ–º–∞–Ω–¥—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!")
        return

# –í–∏—Ä—ñ–∑–∞—î–º–æ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥–∏ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —á–∞—Å—Ç–∏–Ω—É, —â–æ –∑–∞–ª–∏—à–∏–ª–∞—Å—å –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞
# —Ü—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É, —â–æ–± –≤–∫–∞–∑–∞—Ç–∏ —á–∞—Å –æ–±–º–µ–∂–µ–Ω–Ω—è

    value = message.text
    for i in cmd_variants:
        value = value.replace(i, '').strip()
    try:
        value=int(value)
        bantimer = datetime.datetime.now() + datetime.timedelta(seconds=value)
        bantimer_check=True
    except ValueError:
        bantimer=None
        bantimer_check=False

    await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, None, bantimer, False)

    if bantimer_check:
        await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–±–º–µ–∂–µ–Ω–æ –¥–æ {bantimer}")
    else:
        await message.answer("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–±–º–µ–∂–µ–Ω–æ")

# –ö–æ–º–∞–Ω–¥–∞ –≤—ñ–¥–º—ñ–Ω—è—î –æ–±–º–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–õ–∏—à–µ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤)

@dp.message_handler(is_admin=True, commands="free", commands_prefix="!/")
async def unban(message: types.Message):
    if not message.reply_to_message:
        await message.answer("–¶—é –∫–æ–º–∞–Ω–¥—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!")
        return
    await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, None, None, True)
    await message.answer("–ó–∞–±–æ—Ä–æ–Ω—É –Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Å–∫–∞—Å–æ–≤–∞–Ω–æ")

# –ö–æ–º–∞–Ω–¥–∞ –≤–∏–≤–æ–¥–∏—Ç—å –¥–æ–≤—ñ–¥–∫—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

@dp.message_handler(commands="help", commands_prefix="!/")
async def help(message: types.Message):
    await message.answer("–î–∞–Ω–∏–π –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –º–æ–¥–µ—Ä—É–≤–∞–Ω–Ω—è –≤–∞—à–∏—Ö —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π\n\n"
                         "/start - –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ / –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É. –ü–æ—á–∏–Ω–∞—é—á–∏ –ø–µ—Ä–µ–ø–∏—Å–∫—É –∑ –±–æ—Ç–æ–º –≤–∏ –ø–µ—Ä–µ–¥–∞—î—Ç–µ —Å–≤—ñ–π id\n"
                         "/earned - –í–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å –ø—Ä–æ –ø—Ä–∏–±—É—Ç–æ–∫. –ü—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –≤–∞–ª—é—Ç. –ü—Ä–∏–∫–ª–∞–¥–∏ "
                         "–ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏: 3 , 2 usd , eur 4\n"
                         "/spent - –í–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å –ø—Ä–æ –≤–∏—Ç—Ä–∞—Ç—É, —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —Å—Ö–æ–∂–∏–π –¥–æ /earned\n"
                         "/history - –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–ø–∏—Å–∏ –∑–∞ –ø–µ–≤–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–µ–Ω—å) "
                         "–ü—Ä–∏–∫–ª–∞–¥–∏: /h week , /h month , /history year\n"
                         "/del - –í–∏–¥–∞–ª–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–ø–∏—Å, —Ç–∞–∫–∏–º —á–∏–Ω–æ–º –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª—è—Ç–∏ –±—É–¥—å-—è–∫—É –∫-—Å—Ç—å\n\n"
                         "–¢–∞–∫–æ–∂ —ñ—Å–Ω—É—é—Ç—å –Ω–µ–≤–µ–ª–∏—á–∫—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤ —Å—Ñ–µ—Ä—ñ –º–æ–¥–µ—Ä—É–≤–∞–Ω–Ω—è —á–∞—Ç—ñ–≤\n\n"
                         "/ban - –û–±–º–µ–∂–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å "
                         "–Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –ü—Ä–∏–∫–ª–∞–¥–∏: /ban 60 , /ban , !ban 300\n"
                         "/free - –ó–≤—ñ–ª—å–Ω–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥ –¥—ñ—ó –∫–æ–º–∞–Ω–¥–∏ /ban\n")